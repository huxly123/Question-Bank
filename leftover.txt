JS:

strict mode in javascript
call stacks
Excecution context
jobs and priority queues
event loop
shadowing
memory management
method chaining
diff arrow fn vs normal fn
flattening object
prototype chaining
callback hell
async/await

React:
DOM
Browser Object Model (BOM)
Reconciliation
memoization (use callback and use memo)
virual dom
error boundry
hooks
referencelife cycle events
react patterns
redux,
redux-cycle
web-apps
react portal
why react is faster than vanilla js.
www.google.com load what will happen
how will you structure a component when it is recursively called
how is DOM traversed
life cycle of components
difference between class and functional components
virtual dom vs normal dom
csrf and web security by react
interceptor
react fiber
higher order components
lazy loadng react
controlled and uncontrolled components
stateless vs statefull


css: 
positioning in css
stacking context in css (priority in styles and class)
cssom

HTML:
script async defer

webpack 
tree shaking
dependency graph